<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cgling.tms.user.mapper.UserOauthRelationModelMapper" >

    <resultMap id="BaseResultMap" type="com.cgling.tms.user.model.UserOauthRelationModel" >
        <id column="relation_id" property="relationId" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="oauth_id" property="oauthId" jdbcType="BIGINT" />
        <result column="open_id" property="openId" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
    </resultMap>

    <sql id="BaseColumn" >
        relation_id, 
        user_id, 
        oauth_id, 
        open_id, 
        status, 
        create_time
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        SELECT 
            <include refid="BaseColumn" />
        FROM user_oauth_relation
        WHERE relation_id = #{relationId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" >
        DELETE FROM user_oauth_relation
        WHERE relation_id = #{relationId,jdbcType=BIGINT}
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="relationId" >
        INSERT INTO user_oauth_relation (
            user_id, 
            oauth_id, 
            open_id, 
            status, 
            create_time
        )
        VALUES (
            #{userId,jdbcType=BIGINT}, 
            #{oauthId,jdbcType=BIGINT}, 
            #{openId,jdbcType=VARCHAR}, 
            #{status,jdbcType=TINYINT}, 
            #{createTime,jdbcType=BIGINT}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="relationId" >
        INSERT INTO user_oauth_relation
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                user_id,
            </if>
            <if test="oauthId != null" >
                oauth_id,
            </if>
            <if test="openId != null" >
                open_id,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="oauthId != null" >
                #{oauthId,jdbcType=BIGINT},
            </if>
            <if test="openId != null" >
                #{openId,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" >
        UPDATE user_oauth_relation
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="oauthId != null" >
                oauth_id = #{oauthId,jdbcType=BIGINT},
            </if>
            <if test="openId != null" >
                open_id = #{openId,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=BIGINT},
            </if>
        </set>
        WHERE relation_id = #{relationId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" >
        UPDATE user_oauth_relation
        SET user_id = #{userId,jdbcType=BIGINT},
            oauth_id = #{oauthId,jdbcType=BIGINT},
            open_id = #{openId,jdbcType=VARCHAR},
            status = #{status,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=BIGINT}
        WHERE relation_id = #{relationId,jdbcType=BIGINT}
    </update>
      
</mapper>